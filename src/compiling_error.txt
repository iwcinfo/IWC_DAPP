/Users/junep89/Git/src/generate_url.cpp:14:20: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
  std::string date = START_DATE;
                   ^
/Users/junep89/Git/src/generate_url.cpp:15:20: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
  std::string time = START_TIME;
                   ^
/Users/junep89/Git/src/generate_url.cpp:16:19: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
  std::string url = API_URL;
                  ^
/Users/junep89/Git/src/generate_url.cpp:17:20: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
  std::string pkey = PRIVATE_KEY;
                   ^
/Users/junep89/Git/src/generate_url.cpp:87:26: error: out-of-line definition of 'getURL' does not match any declaration in 'GenerateURL'
std::string GenerateURL::getURL(std::string url_base, std::map<std::string, std::string> paramater_map) {
                         ^~~~~~
/Users/junep89/Git/src/generate_url.cpp:89:8: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
  for (auto it = m.begin(); it != m.end(); ){
       ^
/Users/junep89/Git/src/generate_url.cpp:89:18: error: use of undeclared identifier 'm'
  for (auto it = m.begin(); it != m.end(); ){
                 ^
/Users/junep89/Git/src/generate_url.cpp:89:35: error: use of undeclared identifier 'm'
  for (auto it = m.begin(); it != m.end(); ){
                                  ^
/Users/junep89/Git/src/generate_url.cpp:95:15: error: use of undeclared identifier 'm'
    if (it != m.end()) {
              ^
/Users/junep89/Git/src/generate_url.cpp:96:7: error: use of undeclared identifier 'md5_str'
      md5_str.append("&");
      ^
/Users/junep89/Git/src/generate_url.cpp:106:32: error: use of undeclared identifier 'getCurrentDate'
  parameters.insert("endDate", getCurrentDate() + "%20" + getCurrentTime());
                               ^
/Users/junep89/Git/src/generate_url.cpp:106:59: error: use of undeclared identifier 'getCurrentTime'
  parameters.insert("endDate", getCurrentDate() + "%20" + getCurrentTime());
                                                          ^
/Users/junep89/Git/src/generate_url.cpp:108:30: error: too many arguments to function call, expected 0, have 2
  std::string url = a.getURL("http://iwc.io/apiTest", parameters);
                    ~~~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/junep89/Git/src/generate_url.cpp:23:3: note: 'getURL' declared here
  std::string getURL();
  ^
In file included from /Users/junep89/Git/src/generate_url.cpp:6:
/Library/Developer/CommandLineTools/usr/include/c++/v1/map:1092:17: error: no matching member function for call to 'insert'
                insert(__e.__i_, *__f);
                ^~~~~~
/Users/junep89/Git/src/generate_url.cpp:107:14: note: in instantiation of function template specialization 'std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >::insert<const char *>' requested here
  parameters.insert("operatorID", "ibct_iwc");
             ^
/Library/Developer/CommandLineTools/usr/include/c++/v1/map:1070:9: note: candidate function not viable: no known conversion from 'const char' to 'const std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >::value_type' (aka 'const pair<const std::__1::basic_string<char>, std::__1::basic_string<char> >') for 2nd argument
        insert(const_iterator __p, const value_type& __v)
        ^
/Library/Developer/CommandLineTools/usr/include/c++/v1/map:1089:14: note: candidate template ignored: deduced conflicting types for parameter '_InputIterator' ('std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *, long>' vs. 'char')
        void insert(_InputIterator __f, _InputIterator __l)
             ^
/Library/Developer/CommandLineTools/usr/include/c++/v1/map:1066:9: note: candidate function not viable: requires single argument '__v', but 2 arguments were provided
        insert(const value_type& __v) {return __tree_.__insert_unique(__v);}
        ^
5 warnings and 9 errors generated.
